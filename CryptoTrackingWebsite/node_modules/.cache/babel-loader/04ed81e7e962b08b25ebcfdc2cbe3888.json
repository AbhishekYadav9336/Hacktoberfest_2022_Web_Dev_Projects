{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'; // Note: Change v1 to v2 on rapid api\n\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n  'x-rapidapi-key': 'f0021db587msh781fb1cbef39856p11c183jsn45521d5d1c85'\n};\n\nconst createRequest = url => ({\n  url,\n  headers: cryptoApiHeaders\n});\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl\n  }),\n  endpoints: builder => ({\n    getCryptos: builder.query({\n      query: count => createRequest('/coins')\n    })\n  })\n});\nexport const {\n  useGetCryptosQuery\n} = cryptoApi;","map":{"version":3,"sources":["C:/Users/TUSHAR AGRAWAL/HHHacktoberfest_2022_Web_Dev_Projects/CryptoTrackingWebsite/src/services/cryptoApi.js"],"names":["createApi","fetchBaseQuery","baseUrl","cryptoApiHeaders","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","endpoints","builder","getCryptos","query","count","useGetCryptosQuery"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C,C,CAEA;;AACA,MAAMC,OAAO,GAAG,qCAAhB;AACA,MAAMC,gBAAgB,GAAG;AACvB,qBAAmB,6BADI;AAEvB,oBAAkB;AAFK,CAAzB;;AAIA,MAAMC,aAAa,GAAIC,GAAD,KAAU;AAAEA,EAAAA,GAAF;AAAOC,EAAAA,OAAO,EAAEH;AAAhB,CAAV,CAAtB;;AAEA,OAAO,MAAMI,SAAS,GAAGP,SAAS,CAAC;AACjCQ,EAAAA,WAAW,EAAE,WADoB;AAEjCC,EAAAA,SAAS,EAAER,cAAc,CAAC;AAAEC,IAAAA;AAAF,GAAD,CAFQ;AAGjCQ,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvBC,IAAAA,UAAU,EAAED,OAAO,CAACE,KAAR,CAAc;AACxBA,MAAAA,KAAK,EAAGC,KAAD,IAAWV,aAAa,CAAC,QAAD;AADP,KAAd;AADW,GAAd;AAHsB,CAAD,CAA3B;AAUP,OAAO,MAAM;AACXW,EAAAA;AADW,IAETR,SAFG","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\n// Note: Change v1 to v2 on rapid api\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\nconst cryptoApiHeaders = {\r\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n  'x-rapidapi-key': 'f0021db587msh781fb1cbef39856p11c183jsn45521d5d1c85',\r\n};\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: 'cryptoApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl}),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest('/coins')\r\n    })  \r\n  })\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery\r\n} = cryptoApi;"]},"metadata":{},"sourceType":"module"}